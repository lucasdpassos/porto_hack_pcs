[
    {
        "id": "ce5ba32f5ac0a2dd",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "dc57c22878a26a01",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "80923c8f0435f7a4",
        "type": "telegram bot",
        "botname": "PCS_Hackha",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "31ddf043d13a4a7c",
        "type": "websocket-listener",
        "path": "/ws/dashboard-updates",
        "wholemsg": "false"
    },
    {
        "id": "2295068dbcb17ca7",
        "type": "websocket out",
        "z": "ce5ba32f5ac0a2dd",
        "name": "",
        "server": "31ddf043d13a4a7c",
        "client": "",
        "x": 580,
        "y": 260,
        "wires": []
    },
    {
        "id": "42a28745.bd5d78",
        "type": "http response",
        "z": "ce5ba32f5ac0a2dd",
        "name": "",
        "x": 650,
        "y": 200,
        "wires": []
    },
    {
        "id": "1787be40.e87842",
        "type": "http in",
        "z": "ce5ba32f5ac0a2dd",
        "name": "",
        "url": "/simple",
        "method": "get",
        "swaggerDoc": "",
        "x": 261,
        "y": 200,
        "wires": [
            [
                "1857548e.e7a8ab"
            ]
        ]
    },
    {
        "id": "1857548e.e7a8ab",
        "type": "template",
        "z": "ce5ba32f5ac0a2dd",
        "name": "Simple Web Page",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE HTML>\n<html>\n    <head>\n    <title>Simple Live Display</title>\n    <script type=\"text/javascript\">\n        var ws;\n        var wsUri = \"ws:\";\n        var loc = window.location;\n        console.log(loc);\n        if (loc.protocol === \"https:\") { wsUri = \"wss:\"; }\n        // This needs to point to the web socket in the Node-RED flow\n        // ... in this case it's ws/simple\n        wsUri += \"//\" + loc.host + loc.pathname.replace(\"simple\",\"ws/dashboard-updates\");\n\n        function wsConnect() {\n            console.log(\"connect\",wsUri);\n            ws = new WebSocket(wsUri);\n            //var line = \"\";    // either uncomment this for a building list of messages\n            ws.onmessage = function(msg) {\n                var line = \"\";  // or uncomment this to overwrite the existing message\n                // parse the incoming message as a JSON object\n                var data = msg.data;\n                //console.log(data);\n                // build the output from the topic and payload parts of the object\n                line += \"<p>\"+data+\"</p>\";\n                // replace the messages div with the new \"line\"\n                document.getElementById('messages').innerHTML = line;\n                //ws.send(JSON.stringify({data:data}));\n            }\n            ws.onopen = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"connected\";\n                //ws.send(\"Open for data\");\n                console.log(\"connected\");\n            }\n            ws.onclose = function() {\n                // update the status div with the connection status\n                document.getElementById('status').innerHTML = \"not connected\";\n                // in case of lost connection tries to reconnect every 3 secs\n                setTimeout(wsConnect,3000);\n            }\n        }\n        \n        function doit(m) {\n            if (ws) { ws.send(m); }\n        }\n    </script>\n    </head>\n    <body onload=\"wsConnect();\" onunload=\"ws.disconnect();\">\n        <font face=\"Arial\">\n        <h1>Simple Live Display</h1>\n        <div id=\"messages\"></div>\n        <button type=\"button\" onclick='doit(\"click\");'>Click to send message</button>\n        <hr/>\n        <div id=\"status\">unknown</div>\n        </font>\n    </body>\n</html>\n",
        "x": 450,
        "y": 200,
        "wires": [
            [
                "42a28745.bd5d78"
            ]
        ]
    },
    {
        "id": "eccc8bc2.133378",
        "type": "websocket in",
        "z": "ce5ba32f5ac0a2dd",
        "name": "",
        "server": "31ddf043d13a4a7c",
        "client": "",
        "x": 400,
        "y": 320,
        "wires": [
            [
                "9adfff59.652",
                "9adfff59.652"
            ]
        ]
    },
    {
        "id": "9adfff59.652",
        "type": "debug",
        "z": "ce5ba32f5ac0a2dd",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 610,
        "y": 320,
        "wires": []
    },
    {
        "id": "c537faa811e5d940",
        "type": "link in",
        "z": "ce5ba32f5ac0a2dd",
        "name": "",
        "links": [
            "99ed44b27e01b79f",
            "d86374c0a990128d"
        ],
        "x": 425,
        "y": 260,
        "wires": [
            [
                "2295068dbcb17ca7"
            ]
        ]
    },
    {
        "id": "5f4bd88db982e52b",
        "type": "inject",
        "z": "ce5ba32f5ac0a2dd",
        "d": true,
        "name": "Tick every 5 secs",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "test",
        "payload": "",
        "payloadType": "date",
        "x": 350,
        "y": 380,
        "wires": [
            [
                "3c2a746b87031285"
            ]
        ]
    },
    {
        "id": "3c2a746b87031285",
        "type": "function",
        "z": "ce5ba32f5ac0a2dd",
        "name": "format time nicely",
        "func": "msg.payload = Date(msg.payload).toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 380,
        "wires": [
            [
                "99ed44b27e01b79f"
            ]
        ]
    },
    {
        "id": "99ed44b27e01b79f",
        "type": "link out",
        "z": "ce5ba32f5ac0a2dd",
        "name": "",
        "mode": "link",
        "links": [
            "c537faa811e5d940"
        ],
        "x": 685,
        "y": 380,
        "wires": []
    },
    {
        "id": "549fe63188cc5182",
        "type": "watson-speech-to-text",
        "z": "dc57c22878a26a01",
        "name": "",
        "alternatives": 1,
        "speakerlabels": true,
        "smartformatting": false,
        "lang": "pt-BR",
        "langhidden": "pt-BR",
        "langcustom": "NoCustomisationSetting",
        "langcustomhidden": "",
        "custom-weight": "0.5",
        "band": "BroadbandModel",
        "bandhidden": "",
        "keywords": "",
        "keywords-threshold": "0.5",
        "word-confidence": false,
        "password": "",
        "apikey": "e_V905ieOoC1xTNXqa7VTbSe1fvpCtBwXoLHUnsALJbV",
        "payload-response": true,
        "streaming-mode": false,
        "streaming-mute": true,
        "auto-connect": false,
        "discard-listening": false,
        "disable-precheck": false,
        "service-endpoint": "https://api.us-south.speech-to-text.watson.cloud.ibm.com/instances/e2160b5a-3505-4f30-b44c-7cb13e96be38",
        "x": 540,
        "y": 500,
        "wires": [
            [
                "6a2a4fa2846a5f11"
            ]
        ]
    },
    {
        "id": "890b59e653fe454d",
        "type": "telegram receiver",
        "z": "dc57c22878a26a01",
        "name": "",
        "bot": "80923c8f0435f7a4",
        "saveDataDir": "",
        "filterCommands": false,
        "x": 130,
        "y": 500,
        "wires": [
            [
                "e2d8a8b462ab2a1b"
            ],
            [
                "e2d8a8b462ab2a1b"
            ]
        ]
    },
    {
        "id": "e2d8a8b462ab2a1b",
        "type": "change",
        "z": "dc57c22878a26a01",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.weblink",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 500,
        "wires": [
            [
                "549fe63188cc5182"
            ]
        ]
    },
    {
        "id": "6a2a4fa2846a5f11",
        "type": "watson-assistant-v2",
        "z": "dc57c22878a26a01",
        "name": "Porto Hack",
        "service-endpoint": "",
        "assistant_id": "a5685794-6200-4e70-869d-0554cebf6d0f",
        "debug": false,
        "restart": false,
        "return_context": true,
        "alternate_intents": false,
        "multisession": true,
        "timeout": "",
        "optout-learning": false,
        "persist-session-id": false,
        "x": 750,
        "y": 500,
        "wires": [
            [
                "a8a4ec391483f3bc",
                "0c207c8296aed0c6",
                "9088051f37191c3a"
            ]
        ]
    },
    {
        "id": "4c3a98cda6cb1db7",
        "type": "watson-text-to-speech",
        "z": "dc57c22878a26a01",
        "name": "",
        "lang": "pt-BR",
        "langhidden": "pt-BR",
        "langcustom": "NoCustomisationSetting",
        "langcustomhidden": "",
        "voice": "pt-BR_IsabelaV3Voice",
        "voicehidden": "pt-BR_IsabelaV3Voice",
        "format": "audio/mp3",
        "password": "",
        "apikey": "CiulbbkTZw02lqazacObHK8-36hxeNNQ68ys14j_cM9e",
        "payload-response": false,
        "service-endpoint": "https://api.us-south.text-to-speech.watson.cloud.ibm.com/instances/f0a3ac0b-b167-4b51-9ec1-c95364422fa3",
        "x": 1120,
        "y": 500,
        "wires": [
            [
                "a99669f6e787819a"
            ]
        ]
    },
    {
        "id": "d7b4d541df8e4a51",
        "type": "play audio",
        "z": "dc57c22878a26a01",
        "name": "",
        "voice": "",
        "x": 1650,
        "y": 540,
        "wires": []
    },
    {
        "id": "10f9dee14dc109c0",
        "type": "telegram sender",
        "z": "dc57c22878a26a01",
        "name": "",
        "bot": "80923c8f0435f7a4",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1490,
        "y": 420,
        "wires": [
            [
                "f690b090017e717d"
            ]
        ]
    },
    {
        "id": "700714ac4dbb276c",
        "type": "function",
        "z": "dc57c22878a26a01",
        "name": "",
        "func": "msg.payload = {\n    chatId: 1354493990,\n    content: \"iopaaa nasci\",\n    type: \"message\"\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "f690b090017e717d",
        "type": "debug",
        "z": "dc57c22878a26a01",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1670,
        "y": 340,
        "wires": []
    },
    {
        "id": "a99669f6e787819a",
        "type": "function",
        "z": "dc57c22878a26a01",
        "name": "",
        "func": "msg.payload = {\n    content: msg.speech,\n    type: \"voice\",\n    chatId: 1354493990\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 520,
        "wires": [
            [
                "10f9dee14dc109c0",
                "bdd49efab65c1f12"
            ]
        ]
    },
    {
        "id": "bdd49efab65c1f12",
        "type": "debug",
        "z": "dc57c22878a26a01",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.type",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 580,
        "wires": []
    },
    {
        "id": "a8a4ec391483f3bc",
        "type": "function",
        "z": "dc57c22878a26a01",
        "name": "",
        "func": "if(msg.payload.output.intents[0].intent == \"Prontidao\") {\n    msg.payload = `Maravilha, navio ${msg.payload.output.entities[0].value}, o terminal já foi avisado da sua chegada. A Maré está alta, a temperatura no canal está em 17 graus e a humidade relativa do ar está em 3 porcento, cuidado, visibilidade horizontal em aproximadamente 3 quilômetros.`\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 380,
        "wires": [
            [
                "4c3a98cda6cb1db7"
            ]
        ]
    },
    {
        "id": "d86374c0a990128d",
        "type": "link out",
        "z": "dc57c22878a26a01",
        "name": "",
        "mode": "link",
        "links": [
            "c537faa811e5d940"
        ],
        "x": 935,
        "y": 540,
        "wires": []
    },
    {
        "id": "0c207c8296aed0c6",
        "type": "debug",
        "z": "dc57c22878a26a01",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 660,
        "wires": []
    },
    {
        "id": "9088051f37191c3a",
        "type": "change",
        "z": "dc57c22878a26a01",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "event",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.eventType",
                "pt": "msg",
                "to": "event.output.intents.0.intent",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.data.ship",
                "pt": "msg",
                "to": "event.output.entities.0.value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 600,
        "wires": [
            [
                "d86374c0a990128d"
            ]
        ]
    }
]